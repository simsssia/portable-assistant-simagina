// Portable Assistant for SIMAGINA - Minimalist Web App

import { useState } from 'react';
import { Button } from "@/components/ui/button";
import { Card, CardContent } from "@/components/ui/card";

const phrases = [
  "–¢—ã –º–æ–∂–µ—à—å –¥–µ–ª–∞—Ç—å –º–∞–ª–æ. –ì–ª–∞–≤–Ω–æ–µ ‚Äî –¥–µ–ª–∞—Ç—å –ø–æ-—á–µ–ª–æ–≤–µ—á–µ—Å–∫–∏.",
  "–°–µ–≥–æ–¥–Ω—è —Ç—ã –ø—Ä–æ—Å—Ç–æ –ø–æ–µ—à—å ‚Äî –∏ —ç—Ç–æ–≥–æ –¥–æ—Å—Ç–∞—Ç–æ—á–Ω–æ.",
  "–¢—ã —É–∂–µ –º–æ–ª–æ–¥–µ—Ü, —á—Ç–æ –æ—Ç–∫—Ä—ã–ª–∞ —ç—Ç—É —à—Ç—É–∫—É.",
  "–ù–µ –æ–±—è–∑–∞–Ω–∞ –≤—Å—ë –ø–æ–º–Ω–∏—Ç—å. –Ø —Ç—É—Ç, —á—Ç–æ–±—ã –Ω–∞–ø–æ–º–Ω–∏—Ç—å.",
  "–¢—ã –Ω–µ –æ–ø–æ–∑–¥–∞–ª–∞. –¢—ã –ø—Ä–æ—Å—Ç–æ –Ω–∞—á–∞–ª–∞ –ø–æ–∑–∂–µ, —á–µ–º —Ö–æ—Ç–µ–ª–æ—Å—å."
];

export default function AssistantApp() {
  const [mustDo, setMustDo] = useState(["–í—ã–ø–∏—Ç—å –≤–æ–¥—ã", "–û—Ç–≤–µ—Ç–∏—Ç—å –Ω–∞ –ø–∏—Å—å–º–æ —É—á—ë–±—ã"]);
  const [ifEnergy, setIfEnergy] = useState(["–†–∞—Å–ø–ª–∞–Ω–∏—Ä–æ–≤–∞—Ç—å –Ω–µ–¥–µ–ª—é", "–ü–æ–∑–≤–æ–Ω–∏—Ç—å –≤ –ø–æ–ª–∏–∫–ª–∏–Ω–∏–∫—É"]);
  const [later, setLater] = useState(["–£–±–æ—Ä–∫–∞", "–ó–∞–Ω–∏–º–∞—Ç—å—Å—è —Å–∞–π—Ç–æ–º"]);
  const [phrase, setPhrase] = useState(phrases[0]);

  const getRandomPhrase = () => {
    const next = phrases[Math.floor(Math.random() * phrases.length)];
    setPhrase(next);
  };

  return (
    <div className="p-6 max-w-xl mx-auto space-y-6">
      <h1 className="text-2xl font-bold text-center">üëã –ü—Ä–∏–≤–µ—Ç, SIMAGINA</h1>
      <p className="text-center italic text-muted-foreground">
        –°–µ–≥–æ–¥–Ω—è—à–Ω–∏–π —Ñ–æ–∫—É—Å: "5% —ç–Ω–µ—Ä–≥–∏–∏ ‚Äî —ç—Ç–æ —É–∂–µ –¥–≤–∏–∂–µ–Ω–∏–µ."
      </p>

      <Card>
        <CardContent className="space-y-2 py-4">
          <h2 className="text-lg font-semibold">üìã –û–±—è–∑–∞—Ç–µ–ª—å–Ω–æ–µ:</h2>
          {mustDo.map((item, i) => (
            <div key={i} className="flex items-center gap-2">
              <input type="checkbox" /> <span>{item}</span>
            </div>
          ))}
        </CardContent>
      </Card>

      <Card>
        <CardContent className="space-y-2 py-4">
          <h2 className="text-lg font-semibold">üí° –ï—Å–ª–∏ –±—É–¥–µ—Ç —Ä–µ—Å—É—Ä—Å:</h2>
          {ifEnergy.map((item, i) => (
            <div key={i} className="flex items-center gap-2">
              <input type="checkbox" /> <span>{item}</span>
            </div>
          ))}
        </CardContent>
      </Card>

      <Card>
        <CardContent className="space-y-2 py-4">
          <h2 className="text-lg font-semibold">üïì –ù–∞ –ø–æ—Ç–æ–º:</h2>
          {later.map((item, i) => (
            <div key={i} className="flex items-center gap-2">
              <input type="checkbox" /> <span>{item}</span>
            </div>
          ))}
        </CardContent>
      </Card>

      <Card>
        <CardContent className="text-center space-y-2 py-4">
          <h2 className="text-lg font-semibold">üéôÔ∏è –ê—Å—Å–∏—Å—Ç–µ–Ω—Ç –≥–æ–≤–æ—Ä–∏—Ç:</h2>
          <p className="italic">‚Äú{phrase}‚Äù</p>
          <Button onClick={getRandomPhrase} variant="outline">–û–±–Ω–æ–≤–∏—Ç—å —Ñ—Ä–∞–∑—É</Button>
        </CardContent>
      </Card>
    </div>
  );
}
